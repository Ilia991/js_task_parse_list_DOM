{"version":3,"sources":["scripts/main.js"],"names":["list","document","querySelector","people","querySelectorAll","sortList","arr","transNum","num","Number","replace","split","join","map","item","dataInfo","dataset","innerText","name","sort","a","b","salary","sortedListValues","getEmployees","obj","forEach","element","keysData","Object","keys","itemList","createElement","i","length","appendChild","innerHTML"],"mappings":";AAAA,aAuCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EArCA,IAAMA,EAAOC,SAASC,cAAc,MAC9BC,EAASF,SAASG,iBAAiB,MAEzC,SAASC,EAASC,GACPC,SAAAA,EAASC,GACTC,OAAAA,OAAOD,EAAIE,QAAQ,IAAK,IAAIC,MAAM,KAAKC,KAAK,KAG9CN,OAAAA,EAAIO,IAAI,SAAAC,GACPC,IAAAA,EAAWD,EAAKE,QAChBC,EAAeH,GAAAA,OAAAA,EAAKG,WAGrBF,OAAAA,EAAAA,EAAAA,GAAAA,GADL,GAAA,CAEEG,KAAMD,MAEPE,KAAK,SAACC,EAAGC,GAAMd,OAAAA,EAASc,EAAEC,QAAUf,EAASa,EAAEE,UAGpD,IAAMC,EAAmBlB,EAAaF,EAAAA,IAItC,SAASqB,EAAaC,GACpBA,EAAIC,QAAQ,SAAAC,GAIL,IAHCC,IAAAA,EAAWC,OAAOC,KAAKH,GACvBI,EAAW9B,SAAS+B,cAAc,MAE/BC,EAAI,EAAGA,EAAIL,EAASM,OAAS,EAAGD,IACvCF,EAASf,QAAQY,EAASK,IAAMN,EAAQC,EAASK,IAGnDF,EAASd,UAAYU,EAAQT,KAC7BlB,EAAKmC,YAAYJ,KAZrB/B,EAAKoC,UAAY,GAgBjBZ,EAAaD","file":"main.a8a7ee36.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst list = document.querySelector('ul');\nconst people = document.querySelectorAll('li');\n\nfunction sortList(arr) {\n  function transNum(num) {\n    return Number(num.replace('$', '').split(',').join(''));\n  }\n\n  return arr.map(item => {\n    const dataInfo = item.dataset;\n    const innerText = `${item.innerText}`;\n\n    return {\n      ...dataInfo,\n      name: innerText,\n    };\n  }).sort((a, b) => transNum(b.salary) - transNum(a.salary));\n}\n\nconst sortedListValues = sortList([...people]);\n\nlist.innerHTML = '';\n\nfunction getEmployees(obj) {\n  obj.forEach(element => {\n    const keysData = Object.keys(element);\n    const itemList = document.createElement('li');\n\n    for (let i = 0; i < keysData.length - 1; i++) {\n      itemList.dataset[keysData[i]] = element[keysData[i]];\n    }\n\n    itemList.innerText = element.name;\n    list.appendChild(itemList);\n  });\n}\n\ngetEmployees(sortedListValues);\n"]}